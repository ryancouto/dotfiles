#!/bin/bash

# Shortcuts
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias w="cd ~/workspace"
alias g="git"
alias h="history"
alias j="jobs"
alias rmhist="history -c; history -w; rm ~/.bash_history"

# go
unget () {
	if [[ $# -eq 0 ]]; then
					echo "No package given for removal"
	exit 1
	fi
	if [[ -d $GOPATH/src/"$1" ]]; then
				$(go clean -i "$1")
				echo "Go cleaning "$1""
				rm -rf $GOPATH/src/"$1"
				echo "Removing src/"$1""
	else
				echo "Not a valid package: $1"
	fi
}

# kerberos curl
alias kurl='curl --compressed --negotiate : "$@"'

# git
alias g="git"
alias gg="git add . && git commit -m"
alias ga="git add"
alias gs="git status"
alias gcm="git commit -m"
alias gca="git commit --amend"
alias gc="git checkout"
alias gcb="git checkout -b"
alias gmm="git fetch && git merge origin/master"
alias gb="git branch"
alias gbd="git branch -D"
alias gd="git diff"
alias gr="git reset"
alias grh="git reset --hard"
alias grhh="git reset --hard HEAD"
alias greb="git rebase"
alias gpu="git pull"
alias gpur="git pull --rebase"
alias gp="git push"
alias gl="git log"
alias glol="git log --pretty=oneline --abbrev-commit"
alias glogadog="git log --all --decorate --oneline --graph"
alias gm="git merge"
alias gmo="git merge origin/master"
alias ggc="git gc"
alias grp="git repack"
alias grev="git review"
alias gbs="git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'"
alias unfuck="killall watchman && rm .git/fs_cache"

# arc/git
alias reset="gc master && arc clean && git pull"
alias af="arc feature"
alias ad="arc diff --browse"
alias adp="arc diff --preview --browse"
alias al="arc land"

# ldapsearch
alias ldapuser='ldapsearch -LLLxh ldap.local.twitter.com -b dc=ods,dc=twitter,dc=corp uid="$1"'
alias ldapteam='ldapsearch -LLLxh ldap.local.twitter.com -b dc=ods,dc=twitter,dc=corp cn="$1"'

# ./pants from anywhere in repo
pants() {
  cd "$(git rev-parse --show-toplevel)"
  ./pants "$@"
}
# pants
alias pnc="./pants compile --changed-since=origin/master --changed-include-dependees=direct"
alias pt="./pants test --changed-since=origin/master --changed-include-dependees=direct"
alias pfc="./pants compile --changed-fast --changed-since=origin/master --changed-include-dependees=none"

# cd to the repo root
alias cd_repo_root='cd "$(git rev-parse --show-toplevel)"'

# https://github.com/sharkdp/bat
alias cat="bat $1"

colorflag="-G"
# List all files colorized in long format
alias l="ls -lF ${colorflag}"

# List all files colorized in long format, including dot files
alias la="ls -laF ${colorflag}"

# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Enable aliases to be sudoâ€™ed
alias sudo='sudo '

# Get week number
alias week='date +%V'

# Stopwatch
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'

# Get macOS Software Updates, and update installed Ruby gems, Homebrew, npm, and their installed packages
alias update='sudo softwareupdate -i -a; brew update; brew upgrade --all; brew cleanup; npm install npm -g; npm update -g; sudo gem update --system; sudo gem update'

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"

# Trim new lines and copy to clipboard
alias c="tr -d '\n' | pbcopy"

# Recursively delete `.DS_Store` files
alias cleap="find . -type f -name '*.DS_Store' -ls -delete"

# Show/hide hidden files in Finder
alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

# volume
alias stfu="osascript -e 'set volume output muted true'"
alias pumpitup="osascript -e 'set volume 7'"

# Kill all the tabs in Chrome to free up memory
# [C] explained: http://www.commandlinefu.com/commands/view/402/exclude-grep-from-your-grepped-output-of-ps-alias-included-in-description
alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"

# Lock the screen (when going AFK)
alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

# reload the shell (i.e. invoke as a login shell)
alias reload="exec $SHELL -l"

# source bash_profile
alias load="source "${HOME}/.bash_profile""

# fix when time gets out of sync
alias fixtime="sudo ntpdate -u time.apple.com"

# wait for command to finish before allowing sleep
# note: uses the first matched command from ps besides grep
alias caff="caffeinate -s -w $(ps -e -opid,args | grep '$@' | grep -v grep | awk '{print $1}')"

# mysql server (use commands e.g. start, stop, restart)
alias mysqlserver="sudo /usr/local/mysql/support-files/mysql.server"

# add as bookmark and click on any webpage - turns all urls into links
# javascript:function update(node) { const modified = node.innerHTML.replace(/((http|https|ftp)\:\/\/|\bw{3}\.)[a-z0-9\-\.]+\.[a-z]{2,3}(:[a-z0-9]*)?\/?([a-z\u00C0-\u017F0-9\-\._\?\,\'\/\\\+&amp;%\$#\=~])*/gi, url => `<a href="${url}">${url}</a>`); if (modified !== node.innerHTML) node.innerHTML = modified;}; function traverse(node) { for (var i = 0; i < node.children.length; i++) traverse(node.children[i]); if (node.children.length === 0) update(node);}; traverse(document.body)

# scoot
tryout() {
	"$(git rev-parse --show-toplevel)/scoot/config/scripts/tryout.sh $@"
}
testscoot() {
	"sh $(git rev-parse --show-toplevel)/src/go/twitter.biz/scoot/scripts/update-scoot.sh test"
}
bumpscoot() {
	"sh $(git rev-parse --show-toplevel)/src/go/twitter.biz/scoot/scripts/update-scoot.sh bump"
}
devdeploy() {
	"sh $(git rev-parse --show-toplevel)/scoot/config/scripts/dev_deploy.sh $@"
}
alias scootkill="(lsof -c scheduler -t | xargs kill) && (lsof -c workerserver -t | xargs kill) && (lsof -c apiserver -t | xargs kill)"